{
    "version": "https://jsonfeed.org/version/1",
    "title": "红玉のblog • All posts by \"学习笔记\" category",
    "description": "",
    "home_page_url": "https://zeroruby.github.io",
    "items": [
        {
            "id": "https://zeroruby.github.io/2023/10/25/Unity%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://zeroruby.github.io/2023/10/25/Unity%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "Unity插件制作学习笔记",
            "date_published": "2023-10-24T16:00:00.000Z",
            "content_html": "<p>记录自己学习 unity 制作插件时的细节和 tips，有任何问题或疑惑请随时通过主页联系方式联系我一起探讨。</p>\n<span id=\"more\"></span>\n<hr>\n<h1><span id=\"一-自定义-inspector-界面\"> 一、自定义 Inspector 界面</span></h1>\n<h2><span id=\"1-属性相关标识\"> 1、属性相关标识</span></h2>\n<p>5 种变量在 inspector 隐藏和显示的方法</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Value</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> int1;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">HideInInspector</span>]<span class=\"comment\">//直接隐藏在inspector</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> int2=<span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">NonSerialized</span>]<span class=\"comment\">//隐藏的同时不会保存被inspector序列化后的值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> int3=<span class=\"number\">3</span>;<span class=\"comment\">//即更改inspector的值不会影响脚本的初始赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">SerializeField</span>]<span class=\"comment\">//将私有变量显示在inspector</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> int4;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ValueTest valueTest = <span class=\"keyword\">new</span> ValueTest();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">Serializable</span>]<span class=\"comment\">//可让自定义的类显示在inspector</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ValueTest</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> int5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最终在 inspector 的表现效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231025225218480.png\" alt=\"image-20231025225218480\"></p>\n<h2><span id=\"2-自定义界面属性\"> 2、自定义界面属性</span></h2>\n<p>创建自定义界面需要在 Asset 路径下创建名为 Editor 的文件夹，此命名的文件夹打包时不会被打包（Resources 文件夹同理，在 load 方法加载资源时要注意路径<a href=\"https://docs.unity.cn/cn/2019.3/ScriptReference/Resources.Load.html\">（Resources-Load - Unity 脚本 API）</a>）</p>\n<p>创建上述 Value 的自定义 inspector：</p>\n<p>第一步：创建继承 Editor 基类的脚本，并将其放在 Editor 文件夹下，并声明是 Value 的界面</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CustomEditor(typeof(Value))</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ValueEditor</span> :<span class=\"title\">Editor</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedObject mObj;   <span class=\"comment\">//定义序列化目标对象</span></span><br><span class=\"line\">    <span class=\"comment\">//序列化出来几个属性</span></span><br><span class=\"line\">    <span class=\"comment\">//属性对应的是[CustomEditor(typeof(Value))]中，Value类里面的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty int1;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty int2;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty int3;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty int4;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty valueTest;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//选择当前游戏对象</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj = <span class=\"keyword\">new</span> SerializedObject(target);</span><br><span class=\"line\">        <span class=\"comment\">//通过字符串名字，查找Test1类里面的属性，并进行初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.int1 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;int1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.int2 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;int2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.int3 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;int3&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.int4 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;int4&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.valueTest = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;valueTest&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//绘制</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnInspectorGUI</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj.Update();</span><br><span class=\"line\"></span><br><span class=\"line\">        EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.int1);</span><br><span class=\"line\">        EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.int2);</span><br><span class=\"line\">        <span class=\"comment\">//EditorGUILayout.PropertyField(this.int3);</span></span><br><span class=\"line\">        <span class=\"comment\">//因为int3是不被序列化的，所以这里不能写此语句</span></span><br><span class=\"line\">        EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.int4);</span><br><span class=\"line\">        EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.valueTest, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//true属性意思是设置显示子节点，也就是显示TypeDemo里面的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj.ApplyModifiedProperties();</span><br><span class=\"line\">        <span class=\"comment\">//应用属性修改</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>效果如图</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231025232755437.png\" alt=\"image-20231025232755437\"></p>\n<p>可以看到自定义的 Editor 界面不受类本身的属性表示控制。</p>\n<h2><span id=\"3-自定义序列化属性字段\"> 3、自定义序列化属性字段</span></h2>\n<p>此时，我想要当前属性随着我的枚举值的变化而变化，即我选择一个枚举时，其他属性处于不被 editor 绘制的状态。</p>\n<p>方法：</p>\n<p>第一步，创建并书写对应类的脚本和编辑器脚本，这里分别命名为 EnumEditor 和 Enum。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Enum</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> selectedEnum selectedEnum;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject 碰撞盒;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject 特效;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> AnimationClip 动作;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">Serializable</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> selectedEnum</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">碰撞盒,</span><br><span class=\"line\">特效,</span><br><span class=\"line\">动作,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>仅有 Enum 时</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231025234839268.png\" alt=\"image-20231025234839268\"></p>\n<p>EnumEditor：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CustomEditor(typeof(Enum))</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">EnumEditor</span> : <span class=\"title\">Editor</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedObject mObj;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty selectedEnum;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty 碰撞盒;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty 特效;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SerializedProperty 动作;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj = <span class=\"keyword\">new</span> SerializedObject(target);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.selectedEnum = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;selectedEnum&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.碰撞盒 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;碰撞盒&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.特效 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;特效&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.动作 = <span class=\"keyword\">this</span>.mObj.FindProperty(<span class=\"string\">&quot;动作&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnInspectorGUI</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj.Update();</span><br><span class=\"line\">        EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.selectedEnum);</span><br><span class=\"line\">        <span class=\"comment\">//使用switch做条件筛选，this.mEnumDemo.enumValueIndex作为筛选条件，index从0开始，由于我设置枚举类型的第一个属性为None，所以case的值从1开始。</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">this</span>.selectedEnum.enumValueIndex)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.碰撞盒);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.特效);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                EditorGUILayout.PropertyField(<span class=\"keyword\">this</span>.动作);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mObj.ApplyModifiedProperties();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>编写后</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231025235035035.png\" alt=\"image-20231025235035035\"></p>\n<h2><span id=\"4-自定义操作界面\"> 4、自定义操作界面</span></h2>\n<p>当我们需要自定义操作界面时：</p>\n<p>需要用到 EditorGUILayout 方法：<a href=\"https://docs.unity.cn/cn/2019.4/ScriptReference/EditorGUILayout.html\">EditorGUILayout - Unity 脚本 API</a></p>\n<p>以下是常用的。</p>\n<h3><span id=\"a-界面的启动和关闭\"> a、界面的启动和关闭</span></h3>\n<p>创建一个类，存放在 Assets–&gt;Editor 里面，并继承自 EditorWindow</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">WindowsEditor</span> : <span class=\"title\">EditorWindow</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">MenuItem(<span class=\"string\">&quot;Menu/EditorWindow&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"comment\">//声明窗口路径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowWindow</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//CreateInstance会允许创建多个窗口，推荐使用系统自带的单例模式getwindows</span></span><br><span class=\"line\">        <span class=\"comment\">//使用官方提供的实例化窗口方法调用</span></span><br><span class=\"line\">        WindowsEditor.CreateInstance&lt;WindowsEditor&gt;().Show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//浮动型的窗口，跟点击Building Setting出现的窗口效果一样</span></span><br><span class=\"line\">        WindowsEditor.CreateInstance&lt;WindowsEditor&gt;().ShowUtility();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//弹出窗口时的效果</span></span><br><span class=\"line\">        WindowsEditor.CreateInstance&lt;WindowsEditor&gt;().ShowPopup();</span><br><span class=\"line\">        <span class=\"comment\">//此方法和下面的OnGUI配合着使用，否则会出现页面关不掉的情况,此时不会出现UI自带的关闭界面</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用系统提供的单例模式，在unity面板中打开窗口时，只会出现一个(推荐)</span></span><br><span class=\"line\">        WindowsEditor.GetWindow&lt;WindowsEditor&gt;().Show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (GUILayout.Button(<span class=\"string\">&quot;关闭&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.Close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>每个方法效果如下</p>\n<table>\n<thead>\n<tr>\n<th><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026000101143.png\" alt=\"image-20231026000101143\"></th>\n<th><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026000129453.png\" alt=\"image-20231026000129453\"></th>\n<th><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026000158455.png\" alt=\"image-20231026000158455\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Show</td>\n<td>ShowUtility</td>\n<td>ShowUtility</td>\n</tr>\n</tbody>\n</table>\n<h3><span id=\"b-界面的事件相关\"> b、界面的事件相关</span></h3>\n<p>自定义页面中有时会使用自定义的事件，事件通常如下：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index_1 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//刷新方法，每秒钟100次</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    index_1++;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;index_1：&quot;</span> + index_1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index_2 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//刷新方法，刷新周期比Update小</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnInspectorUpdate</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    index_2++;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;index_2：&quot;</span> + index_2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//视图被删除的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDestroy</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;OnDestroy：触发&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//选择一个对象的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnSelectionChange</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//获取选择Hierarchy里面游戏物体的时候的名字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; Selection.gameObjects.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Debug.Log(<span class=\"string\">&quot;OnSelectionChange：触发&quot;</span> + Selection.gameObjects[i].name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取选择Project里面的文件的名字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; Selection.objects.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Debug.Log(<span class=\"string\">&quot;OnSelectionChange：触发&quot;</span> + Selection.objects[i].name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获得焦点的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnFocus</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;OnFocus：触发&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//失去焦点的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnLostFocus</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;OnLostFocus：触发&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Hierarchy更改的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnHierarchyChange</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;OnHierarchyChange：触发&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Project更改的时候触发</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnProjectChange</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Debug.Log(<span class=\"string\">&quot;OnProjectChange：触发&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"c-文本-颜色字段\"> c、文本 / 颜色字段</span></h3>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> 文本 = <span class=\"string\">&quot;默认文字&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> Color 颜色 = Color.white;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (GUILayout.Button(<span class=\"string\">&quot;关闭&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.Close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//一行文本，单行输入框</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.文本 = EditorGUILayout.TextField(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">    <span class=\"comment\">//多行输入框</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.文本 = EditorGUILayout.TextArea(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">    <span class=\"comment\">//密码输入框</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.文本 = EditorGUILayout.PasswordField(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">    <span class=\"comment\">//颜色选择框</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.颜色 = EditorGUILayout.ColorField(<span class=\"keyword\">this</span>.颜色);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026001735821.png\" alt=\"image-20231026001735821\"></p>\n<h3><span id=\"d-标签字段\"> d、标签字段</span></h3>\n<p>类似于 [header (“”)] 标识，在 gui 中显示 tag。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> 文本 = <span class=\"string\">&quot;默认文字&quot;</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> Color 颜色 = Color.white;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"comment\">//标签</span></span><br><span class=\"line\">       EditorGUILayout.PrefixLabel(<span class=\"keyword\">this</span>.文本);<span class=\"comment\">//只写这么一行代码，窗口里面不出现任何内容</span></span><br><span class=\"line\">       EditorGUILayout.Space();<span class=\"comment\">//换行</span></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//标签（下拉框）</span></span><br><span class=\"line\">       <span class=\"keyword\">this</span>.文本 = EditorGUILayout.TagField(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">       EditorGUILayout.Space();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//标签（非可选择标签提示）</span></span><br><span class=\"line\">       EditorGUILayout.LabelField(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">       EditorGUILayout.Space();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//标签（可选择标签提示）</span></span><br><span class=\"line\">       EditorGUILayout.SelectableLabel(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\">       EditorGUILayout.Space();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026002300584.png\" alt=\"image-20231026002300584\"></p>\n<h3><span id=\"e-输入字段\"> e、输入字段</span></h3>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> 文本 = <span class=\"string\">&quot;默认文字&quot;</span>;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> 数字;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     EditorGUILayout.LabelField(<span class=\"string\">&quot;输入整形数字&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.数字 = EditorGUILayout.IntField(<span class=\"keyword\">this</span>.数字);</span><br><span class=\"line\">     EditorGUILayout.LabelField(<span class=\"string\">&quot;输入字符&quot;</span>);</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.文本 = EditorGUILayout.TextField(<span class=\"keyword\">this</span>.文本);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026002601592.png\" alt=\"image-20231026002601592\"></p>\n<h3><span id=\"f-滑动条\"> f、滑动条</span></h3>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> 数字;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">float</span> 浮点数;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">float</span> 浮点最大值;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">float</span> 浮点最小值;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//滑动条  参数1：默认值，参数2：最小值，参数3：最大值</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.浮点数 = EditorGUILayout.Slider(<span class=\"keyword\">this</span>.浮点数, <span class=\"number\">0</span>, <span class=\"number\">100</span>);<span class=\"comment\">//取值区间有小数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.数字 = EditorGUILayout.IntSlider(<span class=\"keyword\">this</span>.数字, <span class=\"number\">0</span>, <span class=\"number\">100</span>);<span class=\"comment\">//取值区间为整数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//最小值到最大值的取值范围，为0-100</span></span><br><span class=\"line\">    EditorGUILayout.MinMaxSlider(<span class=\"keyword\">ref</span> 浮点最小值, <span class=\"keyword\">ref</span> 浮点最大值, <span class=\"number\">0</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026003117435.png\" alt=\"image-20231026003117435\"></p>\n<h3><span id=\"g-vector-输入字段\"> g、Vector 输入字段</span></h3>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> Vector3 mPos3;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.mPos3 = EditorGUILayout.Vector3Field(<span class=\"string\">&quot;三维坐标&quot;</span>, <span class=\"keyword\">this</span>.mPos3);</span><br><span class=\"line\">    EditorGUILayout.Space();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026003443557.png\" alt=\"image-20231026003443557\"></p>\n<h3><span id=\"h-选择\"> h、选择</span></h3>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\">    &#123;        </span><br><span class=\"line\">    \t<span class=\"built_in\">string</span>[] strs = &#123; <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;d&quot;</span> ,<span class=\"string\">&quot;e&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"built_in\">int</span>[] ints = &#123; <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span> &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.index = EditorGUILayout.Popup(<span class=\"keyword\">this</span>.index, strs);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.index = EditorGUILayout.IntPopup(<span class=\"keyword\">this</span>.index, strs,ints);</span><br><span class=\"line\">        EditorGUILayout.Space();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/Emoji.gif\" data-original=\"/image-20231026004155844.png\" alt=\"image-20231026004155844\"></p>\n<p>i、对象选择</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> mTag;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> mLayer;</span><br><span class=\"line\"> <span class=\"keyword\">public</span> Object mObject;</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnGUI</span>()</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     <span class=\"comment\">//标签，下面两种写法，哪个都可以</span></span><br><span class=\"line\">     <span class=\"comment\">//this.mTag = EditorGUILayout.TagField(this.mTag);</span></span><br><span class=\"line\">     <span class=\"keyword\">this</span>.mTag = EditorGUILayout.TagField(<span class=\"string\">&quot;Tag&quot;</span>);</span><br><span class=\"line\">     EditorGUILayout.Space();</span><br><span class=\"line\">     <span class=\"comment\">//层</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.mLayer = EditorGUILayout.LayerField(<span class=\"keyword\">this</span>.mLayer);</span><br><span class=\"line\">      EditorGUILayout.Space();</span><br><span class=\"line\">      <span class=\"comment\">//对象选择，如果想要存放所有的元素，那么参数就写为Object： typeof(Object)</span></span><br><span class=\"line\">     <span class=\"keyword\">this</span>.mObject = EditorGUILayout.ObjectField(<span class=\"string\">&quot;对象选择器&quot;</span>, <span class=\"keyword\">this</span>.mObject, <span class=\"keyword\">typeof</span>(Camera), <span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>从其他博客中学到的，原作者：<a href=\"https://www.cnblogs.com/yzx885059439/p/14497026.html\">Unity3D 插件开发教程 - 挽风入我怀 - 博客园 (cnblogs.com)</a></p>\n",
            "tags": [
                "程序 unity"
            ]
        }
    ]
}