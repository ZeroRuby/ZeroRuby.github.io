<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>红玉のblog • Posts by &#34;文章&#34; category</title>
        <link>https://zeroruby.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Tue, 02 Jul 2024 09:14:12 +0800</pubDate>
        <lastBuildDate>Tue, 02 Jul 2024 09:14:12 +0800</lastBuildDate>
        <category>程序</category>
        <category>unity</category>
        <category>关卡</category>
        <category>战斗</category>
        <item>
            <guid isPermalink="true">https://zeroruby.github.io/2024/07/02/%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E7%B1%BB%E5%9E%8B%E4%B8%AD%E7%9A%84%E5%85%B3%E5%8D%A1%E8%8A%82%E5%A5%8F%E9%97%AE%E9%A2%98/</guid>
            <title>开放世界类型中的关卡节奏问题</title>
            <link>https://zeroruby.github.io/2024/07/02/%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E7%B1%BB%E5%9E%8B%E4%B8%AD%E7%9A%84%E5%85%B3%E5%8D%A1%E8%8A%82%E5%A5%8F%E9%97%AE%E9%A2%98/</link>
            <category>关卡</category>
            <pubDate>Tue, 02 Jul 2024 09:14:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一篇关于分析关卡节奏是什么、怎么用，并通过对部分开放世界游戏进行案例分析进行论证的文章。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr&gt;
&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80-%E5%89%8D%E8%A8%80&#34;&gt;一、前言&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E5%85%B3%E5%8D%A1%E8%8A%82%E5%A5%8F%E6%98%AF%E4%BB%80%E4%B9%88&#34;&gt;1、关卡节奏是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E8%8A%82%E5%A5%8F%E4%B8%8E%E7%8E%A9%E5%AE%B6%E6%BF%80%E5%8A%B1&#34;&gt;2、节奏与玩家激励&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BA%8C-%E5%A6%82%E4%BD%95%E8%A1%A1%E9%87%8F%E8%8A%82%E5%A5%8F&#34;&gt;二、如何衡量节奏&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E6%B5%81%E7%A8%8B%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8D%95%E5%85%83&#34;&gt;1、流程中的最小单元&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E8%A1%A1%E9%87%8F%E8%8A%82%E5%A5%8F&#34;&gt;2、衡量节奏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E5%9F%BA%E4%BA%8E%E9%A1%B9%E7%9B%AE%E8%A1%A1%E9%87%8F%E8%8A%82%E5%A5%8F&#34;&gt;3、基于项目衡量节奏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%89-%E5%85%B3%E5%8D%A1%E8%8A%82%E5%A5%8F%E5%88%86%E6%9E%90&#34;&gt;三、关卡节奏分析&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E6%B8%B8%E6%88%8F%E7%B1%BB%E5%9E%8B%E5%88%86%E6%9E%90&#34;&gt;1、游戏类型分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E8%9C%98%E8%9B%9B%E4%BE%A02%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90&#34;&gt;2、《蜘蛛侠 2》流程分析&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E5%85%B3%E5%8D%A1%E7%BB%84%E4%BB%B6%E5%88%86%E6%9E%90&#34;&gt;（1）关卡组件分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90&#34;&gt;（2）流程分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;span id=&#34;一-前言&#34;&gt; 一、前言&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&#34;1-关卡节奏是什么&#34;&gt; 1、关卡节奏是什么&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在 2014 年的 GDC 上，曾经有一位来自 V 社的游戏设计师对这方面的内容进行过分享。&lt;/p&gt;
&lt;p&gt;总体上来看，节奏描述的是活动、活动强度和活动持续时间的关系。&lt;/p&gt;
&lt;p&gt;在游戏设计上，可以定性的说，节奏是一种用来维持玩家对游戏兴趣的一种工具，可以想玩家传达情感，也能帮助控制事件对玩家的影响。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;2-节奏与玩家激励&#34;&gt; 2、节奏与玩家激励&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;为了吸引玩家持续且沉浸的进行游戏，需要通过一些奖励或事件来推动玩家继续前进，如：物品、故事要素、战斗、宝箱等等。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&#34;二-如何衡量节奏&#34;&gt; 二、如何衡量节奏&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;通常为了更好的优化游戏体验，正确的确定游戏流程中的节奏能为游戏设计带来更多的便利。&lt;/p&gt;
&lt;p&gt;通常我们希望能以图表的形式对节奏进行可视化的测量，其横轴可以使用时间、事件等作为单位，然而其纵轴作为强度（intensity）却是一个十分抽象的概念。&lt;/p&gt;
&lt;p&gt;那么如何衡量节奏的强度呢？&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;1-流程中的最小单元&#34;&gt; 1、流程中的最小单元&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;首先我们需要寻找节奏的最小单元，我们需要引入传统电影中的叙事结构的分析中最小的单元：“节拍”，分析如下：&lt;/p&gt;
&lt;p&gt;在传统动画和影视行业中，以一部电影为例，电影中的剧情会有一些关键的事件推动剧情的发展，称之为&lt;em&gt;&lt;strong&gt;激励事件&lt;/strong&gt;&lt;/em&gt;，这些事件是在通过 “幕” 来进行分割的，以常规电影的 “三幕式” 结构进行划分，不同的事件安插在不同的幕间（例如：中点事件在第二幕，作为进展纠纷、提升节奏的重要事件，通常一部电影的优劣也可以通过后续事件的情绪高潮是否高过中点事件来判断电影的结构完整性）。这些事件正是由一个个的 “节拍” 组成。在传统电影叙事中，一个节拍是动作 \ 反应中的一种行为交流，而在游戏设计上，&lt;em&gt;&lt;strong&gt;节拍认为是玩家交互的一次行为&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;一个个节拍构成了一个场景，诸多场景组成一个流程。如果一个流程中节拍出现的太过频繁，玩家会应接不暇，反之也会感到无聊。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;2-衡量节奏&#34;&gt; 2、衡量节奏&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在找到流程设计中的最小单元之后，我们的节奏量表的纵轴就可以确定了，那就是我们的节拍数（通过上述论述可以确定，一个节拍认为是一次交互）。&lt;/p&gt;
&lt;p&gt;通过对不同游戏中的玩法、战斗、探索、奖励拆分成量化的节拍数，即可对关卡的节奏强度进行衡量。&lt;/p&gt;
&lt;p&gt;举个例子：衡量战斗的节拍数就是寻找战斗的最小周期，如射击游戏中，最小周期是一次弹夹的更换。在 ARPG 中，可以是一次连段、一次闪避等等（即进行交互后回到初始状态视为一次周期）。那么在流程中存在需要多少个节拍才能解决的战斗，就认为这个流程的战斗强度为多少。&lt;/p&gt;
&lt;p&gt;可以发现这是一种较为通用的衡量节奏的方法。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;3-基于项目衡量节奏&#34;&gt; 3、基于项目衡量节奏&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;通过上述方式我们找到了一个能较为通用的衡量关卡节奏的方法，但未免有些复杂，在实际的项目开发中，需要有一个通用的讨论节奏的方法，使其不需要繁琐的换算来衡量节奏。&lt;/p&gt;
&lt;p&gt;例如在 V 社游戏半条命 2 中，开发团队有一种针对项目的来讨论节奏的方法，通过运用这种方法能将整个游戏概括成几个基本的组成部分：战斗、谜题、探索、编排和街景。在完成拆分后对每个组成部分进行下定义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;战斗（Combat）：描述一个玩家参与到一场战斗当中的任何时间&lt;/li&gt;
&lt;li&gt;探索（Explore）：用于说明玩家走遍游戏环境、而不主动参与谜题解决和战斗的部分&lt;/li&gt;
&lt;li&gt;谜题（Puzzle）：玩家必须克服的挑战。在解决之前无法前进&lt;/li&gt;
&lt;li&gt;编排（choreography）：动画场景，如：镜头调度、动画演出等部分。&lt;/li&gt;
&lt;li&gt;街景：吸引玩家视觉兴趣的区域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此基于上述的分析，在 14 年的 GDC 上，开发者对《半条命 2》中第二章的关卡进行了分析&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;/image-20240702103328593-17198876114711.png&#34; alt=&#34;image-20240702103328593&#34;&gt;&lt;/p&gt;
&lt;p&gt;开发者对这张图进行边缘化，即可得到关卡的节奏曲线：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;/image-20240702103408621-17198876505782.png&#34; alt=&#34;image-20240702103408621&#34;&gt;&lt;/p&gt;
&lt;p&gt;再对关卡进行分析，添加事件之间的过渡，得到如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;/image-20240702103441001.png&#34; alt=&#34;image-20240702103441001&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此，在实际项目开发中，对于一些较为通用和常规的关卡，我们可以使用这种方法快速确定关卡的节奏曲线。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&#34;三-关卡节奏分析&#34;&gt; 三、关卡节奏分析&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;在完成上述的关卡节奏的探索后，我们来探索开放世界游戏中的一些关于关卡节奏方面的问题。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;1-游戏类型分析&#34;&gt; 1、游戏类型分析&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;开放世界游戏不同的项目设计方式也大相径庭。因此从关卡体验和流程的角度上，我们拆分成一下几类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以 POI 为主要引导的：如老头环、野炊和王泪等属于这一类，这一类开放世界游戏极大程度的削弱的引导，所以在关卡节奏的衡量上也相对更加困难。&lt;/li&gt;
&lt;li&gt;以任务、战斗为引导的：如原神、蜘蛛侠 2 等属于这一类，这一类开放世界在流程设计上仍然类似于传统箱庭关卡，在节奏的衡量方面相对更加容易&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span id=&#34;2-蜘蛛侠-2流程分析&#34;&gt; 2、《蜘蛛侠 2》流程分析&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&#34;1关卡组件分析&#34;&gt; （1）关卡组件分析&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;分析关卡之前需要确定该游戏中的流程有哪些组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CG 动画：CG 动画的节奏和叙事有关，通常不在流程中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;战斗：蜘蛛侠的战斗包含了格斗、跑酷的内容。一个基础小怪可以用一套连招击杀，视为一个周期，那么可以认为含有一个小怪的战斗其节奏为 1，精英怪为 3，一个战斗场景的节奏为玩家同时面对的敌人的数量（OB 的怪物不算在内）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过场动画：用于衔接幕间的时长较短的动画，通常为实际动画，视为单个单元，节奏放缓，为 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解密：在关卡流程中完成特定玩法进入下一个流程，根据谜题难度而定，简单谜题定为 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;探索：即不战斗也不解密的过程。由于蜘蛛侠系列存在跑酷玩法，故探索过程中的节奏相对其他类型的游戏较高，其单位时间内完成的周期性动作是固定的，可以视为探索过程中，节奏为 3&lt;/p&gt;
&lt;p&gt;(除战斗以外的其他部分的节奏衡量无需过于精准，因为确定了波峰和波谷之后，其他的误差不会对结果有太大影响。一些特殊的战斗，如追逐战需要特别对待)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span id=&#34;2流程分析&#34;&gt; （2）流程分析&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;对游戏的新手关卡进行分析&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;过几天更新&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zeroruby.github.io/2023/10/19/%E6%89%93%E5%87%BB%E6%84%9F%E4%BC%98%E5%8C%96%E8%AE%BE%E8%AE%A1/</guid>
            <title>打击感和战斗手感优化设计</title>
            <link>https://zeroruby.github.io/2023/10/19/%E6%89%93%E5%87%BB%E6%84%9F%E4%BC%98%E5%8C%96%E8%AE%BE%E8%AE%A1/</link>
            <category>战斗</category>
            <pubDate>Thu, 19 Oct 2023 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一篇关于如何进行打击感和战斗手感优化的文章&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;hr&gt;
&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80-%E5%89%8D%E8%A8%80&#34;&gt;一、前言&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BC%98%E5%8C%96%E6%89%93%E5%87%BB%E6%84%9F&#34;&gt;1、为什么要优化打击感&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%98%E7%A7%80%E7%9A%84%E6%88%98%E6%96%97%E6%89%8B%E6%84%9F&#34;&gt;2、什么是优秀的战斗手感&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E4%BB%80%E4%B9%88%E6%98%AF%E4%BC%98%E7%A7%80%E7%9A%84%E6%88%98%E6%96%97%E6%89%8B%E6%84%9F&#34;&gt;3、什么是优秀的战斗手感&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BA%8C-%E6%89%93%E5%87%BB%E6%84%9F%E5%92%8C%E6%89%8B%E6%84%9F%E7%9A%84%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0&#34;&gt;二、打击感和手感的影响因素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%89-%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E6%89%93%E5%87%BB%E6%84%9F&#34;&gt;三、如何优化打击感&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E8%A7%86%E8%A7%89%E5%9B%A0%E7%B4%A0&#34;&gt;1、视觉因素&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E5%8A%A8%E4%BD%9C&#34;&gt;（1）动作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2%E4%BD%8D%E7%A7%BB&#34;&gt;（2）位移&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3%E7%89%B9%E6%95%88&#34;&gt;（3）特效&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4ui%E5%92%8C%E5%90%8E%E5%A4%84%E7%90%86&#34;&gt;（4）UI 和后处理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E5%90%AC%E8%A7%89%E5%9B%A0%E7%B4%A0&#34;&gt;2、听觉因素&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E9%9F%B3%E6%95%88&#34;&gt;（1）音效&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E8%BE%93%E5%85%A5%E5%9B%A0%E7%B4%A0&#34;&gt;3、输入因素&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E5%88%A4%E5%AE%9A&#34;&gt;（1）判定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dic-id%E5%8A%A8%E4%BD%9C%E5%8F%96%E6%B6%882%E5%8A%A8%E4%BD%9C%E5%8F%96%E6%B6%88div&#34;&gt;&lt;dic id=&#34;动作取消&#34;&gt;（2）动作取消&lt;/dic&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E8%A7%A6%E8%A7%89%E5%9B%A0%E7%B4%A0&#34;&gt;4、触觉因素&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1%E6%8E%A7%E5%88%B6%E5%99%A8%E9%9C%87%E5%8A%A8&#34;&gt;（1）控制器震动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2%E5%8A%9B%E5%8F%8D%E9%A6%88%E6%89%B3%E6%9C%BA&#34;&gt;（2）力反馈扳机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;span id=&#34;一-前言&#34;&gt; 一、前言&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&#34;1-为什么要优化打击感&#34;&gt; 1、为什么要优化打击感&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;打击感对于任何一个拥有动作元素的游戏来说都是不可或缺的。通常来说，打击感优化会是动作游戏中一个较为核心的模块，也是一个难以做好的模块。&lt;/p&gt;
&lt;p&gt;但是打击感的提升对于游戏品质、玩家体感方面的提升都是巨大的，所以对于一款以战斗为核心的游戏而言，打击感的优化是比较重要的。&lt;/p&gt;
&lt;p&gt;另外，此处需要感谢&lt;a href=&#34;https://space.bilibili.com/27429148?spm_id_from=333.999.0.0&#34;&gt;哲哥&lt;/a&gt;的内容分享&lt;/p&gt;
&lt;h2&gt;&lt;span id=&#34;2-什么是优秀的战斗手感&#34;&gt; 2、什么是优秀的战斗手感&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;战斗手感和打击感需要围绕三个重要因素进行设计&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;顺&lt;/strong&gt;：优秀的动作操作体验应当非常顺滑，按下按钮立刻有所对应反应，做到所控即所得。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;准&lt;/strong&gt;：只有当命中反馈尽量精准时，才能让玩家信任游戏的操控体验，做到人机交互的统一。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;爽&lt;/strong&gt;：战斗节奏需要从压抑到释放的节奏变化，通过动作与各类视效、镜头和的联动达到对感官的本能冲击。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span id=&#34;3-什么是优秀的战斗手感&#34;&gt; 3、什么是优秀的战斗手感&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;干脆利落&lt;/li&gt;
&lt;li&gt;攻击意图明确&lt;/li&gt;
&lt;li&gt;攻守双方协调统一&lt;/li&gt;
&lt;li&gt;动特音一体化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;span id=&#34;二-打击感和手感的影响因素&#34;&gt; 二、打击感和手感的影响因素&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0.png&#34; alt=&#34;影响因素&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过人的感知对打击感区分了四个方向的影响因素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视觉：
&lt;ul&gt;
&lt;li&gt;动作&lt;/li&gt;
&lt;li&gt;位移&lt;/li&gt;
&lt;li&gt;特效&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;li&gt;后处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;听觉
&lt;ul&gt;
&lt;li&gt;音效&lt;/li&gt;
&lt;li&gt;背景音乐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输入
&lt;ul&gt;
&lt;li&gt;动作取消&lt;/li&gt;
&lt;li&gt;受击判定&lt;/li&gt;
&lt;li&gt;指令输入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;触觉
&lt;ul&gt;
&lt;li&gt;控制器震动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;span id=&#34;三-如何优化打击感&#34;&gt; 三、如何优化打击感&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&#34;1-视觉因素&#34;&gt; 1、视觉因素&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&#34;1动作&#34;&gt; （1）动作&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4&gt;&lt;span id=&#34;攻击动作&#34;&gt; 攻击动作&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;符合发力原理&lt;/p&gt;
&lt;p&gt;对于任何一个动作设计而言，其基本都需要符合发力原理。&lt;/p&gt;
&lt;p&gt;以人形骨骼为例，通常以腿→腰胯→肩手头的发力顺序来保证动作看起来顺畅。&lt;/p&gt;
&lt;p&gt;参考武打港片中（如：叶问系列）的打戏镜头，可以看出发力要符合人体结构才能看起来真实&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%8F%B6%E9%97%AE%E5%86%B2%E6%8B%B3.gif&#34; alt=&#34;叶问冲拳&#34; title=&#34;叶问 日字冲拳&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;符合攻击意图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蓄力→释放&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E6%99%AE%E9%80%9A%E5%8A%A8%E4%BD%9C.gif&#34; alt=&#34;普通动作&#34;&gt;&lt;/p&gt;
&lt;p&gt;​					这是一个没有任何蓄力的动作设计 &lt;strong&gt;↑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E8%93%84%E5%8A%9B%E5%8A%A8%E4%BD%9C.gif&#34; alt=&#34;蓄力动作&#34;&gt;&lt;/p&gt;
&lt;p&gt;​					这是添加了蓄力动作的设计 &lt;strong&gt;↑&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​					由此可见一个有节奏的动作设计需要在每帧内的速度各不相同，如果动画同学在进行动作设计的同时没有注意这					点，很有可能导致最后动作设计缺少打击感。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;需要有后摇缓冲&lt;/p&gt;
&lt;p&gt;对于一个攻击动作而言，无论其是否能被取消（&lt;a href=&#34;#动作取消&#34;&gt;动作取消&lt;/a&gt;），都需要设计其攻击判定结束后的收招动作，是确保动作的连贯性和演出性质的重要因素。同时搭配动作取消，能成为影响操作手感的重要因素。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%8E%9F%E7%A5%9E%E6%94%B6%E5%89%91.gif&#34; alt=&#34;原神收剑&#34; title=&#34;原神迪卢克收剑动作&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4&gt;&lt;span id=&#34;受击-动作&#34;&gt; 受击 动作&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;夸张化处理&lt;/p&gt;
&lt;p&gt;对于 videogame 而言，通常由于缺少大银幕、运镜、对焦等拍摄手法，其表现力通常不如影视作品，所以在游戏中的动作设计通常会比影视作品中更加夸张化处理一点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一帧切原则&lt;/p&gt;
&lt;p&gt;通常动作游戏的打击感强调爽快、精准和迅速的反馈，所以当角色受到攻击后，需要参考一帧切原则进行受击动画的播放。即：角色从当前动作过度到受击动作的播放只能使用一帧的过度时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E4%B8%80%E5%B8%A7%E5%88%87%E5%8E%9F%E5%88%99.gif&#34; alt=&#34;一帧切原则&#34; title=&#34;一帧切原则&#34;&gt;&lt;/p&gt;
&lt;p&gt;而在以强调真实感的拟真游戏当中，动作设计以真实感为核心，所以此时无需参考一帧切原则，可以使用较长的过渡动画。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%88%87%E6%9E%AA%E5%A1%94%E7%A7%91%E5%A4%AB.gif&#34; alt=&#34;切枪塔科夫&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分档合理&lt;/p&gt;
&lt;p&gt;在 ARPG/ACT 游戏中，受击动作会根据规则进行分档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;融合受击：不会打断角色当前的动作，通过动画遮罩实现受击动作和当前动作的融合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大 / 小受击：此类型受击会打断角色当前动作，通过一帧切播放受击动画来打断角色当前动作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;击飞受击：角色受到重受击后，自身产生击飞类型的受击位移。&lt;/p&gt;
&lt;p&gt;通常重受击会投放在连段中的最后一段，符合战斗从压抑到释放的节奏，如果将重攻击投放在普攻中间，会导致连段无法连上，破坏玩家战斗节奏&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动画融合&lt;/p&gt;
&lt;p&gt;以 unity 为例用动画层（layers）和动画遮罩（avatar mask）实现动画融合，可以提高受击动作流畅性&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019084938968.png&#34; alt=&#34;image-20231019084938968&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过在 unity 中新建新的动画 layer，在播放受击动画依照动画层级和权重进行动作播放&lt;/p&gt;
&lt;p&gt;例如：当角色的上半身碰撞盒受击时，Body 层的动作播放受击动作权重为 100%，而下半身通过播放权重 20%，通过 IK 实现动画的连贯性，避免出现上半身受击，而下半身动作很大的错误案例&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E4%B8%80%E5%B8%A7%E5%88%87%E5%8E%9F%E5%88%99.gif&#34; alt=&#34;一帧切原则&#34;&gt;&lt;/p&gt;
&lt;p&gt;以同样的例子可以看出，在街霸 6 中的实现就是如此，当角色上半身受击时、下半身动作幅度并不大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体型衰减&lt;/p&gt;
&lt;p&gt;如果在游戏中都是人形 avatar 且体型相差不大的情况下可以不使用体型衰减（如 FTG），但对于出现体型不同的怪物，例如当正常体型的人形角色攻击大体型怪物时，会需要有相应的受击衰减，可通过&lt;a href=&#34;#韧性机制&#34;&gt; 韧性机制&lt;/a&gt;进行受击判定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;受身动作&lt;/p&gt;
&lt;p&gt;当角色受到大幅度受击动作后，通常应该有一个受身动作，其节奏随游戏不同略有不同，在格斗游戏中，角色受击后的起身应该保持尽可能相同的帧数，确保玩家在面对不同角色的时候的战斗节奏不会发生太大的变化。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%AE%88%E8%BA%AB%E5%8A%A8%E4%BD%9C.gif&#34; alt=&#34;守身动作&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span id=&#34;2位移&#34;&gt; （2）位移&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4&gt;&lt;span id=&#34;受击位移&#34;&gt; 受击位移&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;通常受击位移在前 4 帧内不会有太大变化，目的是配合特效生命周期进行统一管理，防止出现特效播放位置和实际受击位置不匹配的问题。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019093225842.png&#34; alt=&#34;image-20231019093225842&#34; style=&#34;zoom:33%;&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019093247344.png&#34; alt=&#34;image-20231019093247344&#34; style=&#34;zoom:33%;&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019093621101.png&#34; alt=&#34;image-20231019093621101&#34; style=&#34;zoom:33%;&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;由于受击位移在前 4 帧内不会发生较大变化，所以在初速度算法上会有额外的补偿，例如：&lt;/p&gt;
&lt;p&gt;设理论初速度 v=10m/s&lt;/p&gt;
&lt;p&gt;则补偿后的初速度 v1=10/(0.167*5)≈12m/s&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span id=&#34;3特效&#34;&gt; （3）特效&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;攻击特效&lt;/p&gt;
&lt;p&gt;攻击特效需要匹配角色战斗性能，即特效需要符合角色动作，避免出现动作不匹配的问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019094253154.png&#34; alt=&#34;image-20231019094253154&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;受击特效&lt;/p&gt;
&lt;p&gt;受击特效按类别又可以分为一下几类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通用受击特效&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E8%A1%8C%E7%A7%8B.gif&#34; alt=&#34;行秋&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%8F%97%E5%87%BB%E7%89%B9%E6%95%88%E8%A1%8C%E7%A7%8B.png&#34; alt=&#34;受击特效行秋&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;此类型特效无需特殊的表现，都可以引用合适的受击特效，绝大多数近战和远程物理类型攻击可引用这些受击特效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;技能专用受击特效&lt;/p&gt;
&lt;p&gt;有时为了体现技能本身的特性，需要制作技能专用受击特效，可以弥补此类技能本身动作表现较弱的缺点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;babara.gif&#34; alt=&#34;babara&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;物体受击特效&lt;/p&gt;
&lt;p&gt;与技能受击特效不同，此类型的特效播放规则不依赖于攻击方的攻击方式，只取决于受击方的特性&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;护盾受击&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E6%8A%A4%E7%9B%BE%E5%8F%97%E5%87%BB.gif&#34; alt=&#34;护盾受击&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;场景受击&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E5%9C%BA%E6%99%AF%E5%8F%97%E5%87%BB.gif&#34; alt=&#34;场景受击&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特效生命周期&lt;/p&gt;
&lt;p&gt;通常来说，一个特效的生命周期分为三个关键帧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首帧表现：即特效的第一帧会达到总体的 80% 的表现&lt;/li&gt;
&lt;li&gt;最大形状帧数：在特效的第三帧会达到总体的 100%&lt;/li&gt;
&lt;li&gt;消散帧数：通常会在第 7-8 帧消散，视情况而定&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019095930979.png&#34; alt=&#34;image-20231019095930979&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019095947453.png&#34; alt=&#34;image-20231019095947453&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019100003310.png&#34; alt=&#34;image-20231019100003310&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;顿帧&lt;/p&gt;
&lt;p&gt;顿帧是一把双刃剑，在不合理的时候出现的顿帧会破坏游戏的整体流畅性，仅适合用在大型怪物或一些需要特别表现的受击动作上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span id=&#34;4ui-和后处理&#34;&gt; （4）UI 和后处理&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;伤害显示&lt;/p&gt;
&lt;p&gt;通过伤害显示的方式体现是否命中是一种简单的处理方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;apex.gif&#34; alt=&#34;apex&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;血条震动&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E8%A1%80%E6%9D%A1%E9%9C%87%E5%8A%A8.gif&#34; alt=&#34;血条震动&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;屏幕震动&lt;/p&gt;
&lt;p&gt;屏幕震动同样是一把双刃剑，仅仅适合用在蓄力、重武器的攻击前摇以及命中等情况下，适合搭配镜头运动等其他因素一起食用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E9%9C%87%E5%B1%8F%E5%B9%95.gif&#34; alt=&#34;震屏幕&#34; title=&#34;图片来源于网络&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;风格化处理&lt;/p&gt;
&lt;p&gt;风格化后处理是一种能快速表现攻击和受击的方式，但需要注意避免后处理过多导致遮挡主要画面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E9%A3%8E%E6%A0%BC%E5%8C%96%E5%A4%84%E7%90%86.gif&#34; alt=&#34;风格化处理&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特写镜头&lt;/p&gt;
&lt;p&gt;特写镜头是一种影视化的处理方式，能带来较好的表现&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E9%95%9C%E5%A4%B4.gif&#34; alt=&#34;镜头&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&#34;2-听觉因素&#34;&gt; 2、听觉因素&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&#34;1音效&#34;&gt; （1）音效&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;音效设计总体上可以确认是以下流程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E9%9F%B3%E6%95%88%E8%AE%BE%E8%AE%A1.png&#34; alt=&#34;音效设计&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;近战受击音效&lt;/p&gt;
&lt;p&gt;近战音效的受击是多方面的因素共同影响的，通过多方面的因素产生音效融合来体现打击感&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;受击材质
&lt;ul&gt;
&lt;li&gt;肉体&lt;/li&gt;
&lt;li&gt;金属&lt;/li&gt;
&lt;li&gt;甲壳&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;攻击力度
&lt;ul&gt;
&lt;li&gt;轻攻击&lt;/li&gt;
&lt;li&gt;重攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;攻击锋利度
&lt;ul&gt;
&lt;li&gt;锐器&lt;/li&gt;
&lt;li&gt;钝器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;远程受击音效&lt;/p&gt;
&lt;p&gt;远程受击音效通常是较为单层的，受击材质部分占据了大部分的权重&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;受击材质&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子弹口径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子弹射速&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&#34;3-输入因素&#34;&gt; 3、输入因素&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&#34;1判定&#34;&gt; （1）判定&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;碰撞盒&lt;/p&gt;
&lt;p&gt;对于任何一款拥有战斗元素的游戏来说，攻击的命中判定都是不可或缺的因素&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;%E7%A2%B0%E6%92%9E%E5%92%8C.png&#34; alt=&#34;碰撞和&#34;&gt;&lt;/p&gt;
&lt;p&gt;通常碰撞盒可以分为以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;矩形（通常用于 2D 游戏）&lt;/li&gt;
&lt;li&gt;球体&lt;/li&gt;
&lt;li&gt;胶囊体&lt;/li&gt;
&lt;li&gt;BOX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 3d 游戏中较多的使用胶囊体作为 hitbox，主要原因是胶囊体在引擎进行碰撞计算的时候会消耗更少的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;碰撞判定&lt;/p&gt;
&lt;p&gt;主要是针对碰撞盒在攻击过程中产生的连续碰撞问题，因为在引擎中，碰撞是连续存在的，在攻击命中后，对于是否需要连续进行命中判定，就需要对技能进行提前设计。&lt;/p&gt;
&lt;p&gt;在技能编辑器中需要设计此功能，即在攻击招式的判定帧内生效次数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;d5b82012-0436-452c-a88e-4b150cb08059.png&#34; alt=&#34;d5b82012-0436-452c-a88e-4b150cb08059&#34; title=&#34;图片来源于网络&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位置判定&lt;/p&gt;
&lt;p&gt;通常受击位置的判定需要考虑攻击碰撞盒同时命中多个受击碰撞盒的问题。此时需要设计正确的碰撞规则，才能保证受击方的动作和特效播放正确。&lt;/p&gt;
&lt;p&gt;可以使用向量判定方案：即记录从攻击碰撞盒到每个受击碰撞盒中心位置的向量，记为判定向量 DisToBox。同时记录攻击方向向量 disAttack，则取两者向量差值最小时的碰撞盒为实际受击位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019103815644.png&#34; alt=&#34;image-20231019103815644&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;dic id=&#34;韧性机制&#34;&gt;动作判定&lt;/dic&gt;&lt;/p&gt;
&lt;p&gt;通常在 ARPG/ACT 游戏中会有一套韧性判定机制，当韧性小于 0 时才会播放重受击动画。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;image-20231019104122855.png&#34; alt=&#34;image-20231019104122855&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;span id=&#34;2动作取消&#34;&gt; &lt;dic id=&#34;动作取消&#34;&gt;（2）动作取消&lt;/dic&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;动作取消在动作游戏中是一个很重要的因素&lt;/p&gt;
&lt;p&gt;首先，减少了收尾，两个技能的连接可以使得动作更加的顺滑，其次，减少了破绽，因为在起手和收尾阶段往往更容易受到攻击和打断，而攻击时往往处于难以打断状态。再者，某一个动作可能有更多的后续动作，拓宽了动作选择，达到出其不意的效果，让战局更加的变幻莫测。&lt;/p&gt;
&lt;p&gt;并且在不同类型的游戏中取消会有不同的设定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Moba 中一般可以在攻击的任何时候取消&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;35169915-3d23-436d-b3d8-8895e6043e22.gif&#34; alt=&#34;35169915-3d23-436d-b3d8-8895e6043e22&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RPG 来说只能取消部分的后摇收招 动作&lt;/p&gt;
&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;优菈.gif&#34; alt=&#34;优菈&#34; style=&#34;zoom: 25%;&#34;&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FTG 中需要操作的指令覆盖或者消耗资源来强制取消&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&#34;4-触觉因素&#34;&gt; 4、触觉因素&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;触觉因素是一个和硬件关联性很大的因素，通常在主机游戏中体现较为明显，也更容易做适配。&lt;/p&gt;
&lt;h3&gt;&lt;span id=&#34;1控制器震动&#34;&gt; （1）控制器震动&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;通常来说在命中时给控制器一个震动指令，能带给玩家更直观的打击体验&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Loading1.gif&#34; data-original=&#34;FF16.gif&#34; alt=&#34;FF16&#34; title=&#34;FF16泰坦boss战&#34;&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&#34;2力反馈扳机&#34;&gt; （2）力反馈扳机&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;在 dualsecse 控制器中新增的力反馈扳机搭配 ps5 平台的专门主机优化，在一系列射击游戏中能获得更优秀的感官体验。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;暂时就会这么多，想到了再更新。欢迎各位大佬对文章有任何问题可以通过主页的联系方式联系我进行探讨。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
